{"repository_name":"github.com/mamantoha/crest","body":"<p align=\"left\"><img src=\"https://raw.githubusercontent.com/mamantoha/crest/master/logo/logotype_horizontal.png\" alt=\"crest\" height=\"150px\"></p>\n\n[![Build Status](https://travis-ci.org/mamantoha/crest.svg?branch=master)](https://travis-ci.org/mamantoha/crest)\n[![GitHub release](https://img.shields.io/github/release/mamantoha/crest.svg)](https://github.com/mamantoha/crest/releases)\n[![Commits Since Last Release](https://img.shields.io/github/commits-since/mamantoha/crest/latest.svg)](https://github.com/mamantoha/crest/pulse)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://mamantoha.github.io/crest/)\n[![License](https://img.shields.io/github/license/mamantoha/crest.svg)](https://github.com/mamantoha/crest/blob/master/LICENSE)\n\nSimple HTTP and REST client for Crystal, inspired by the Ruby's RestClient gem.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  crest:\n    github: mamantoha/crest\n```\n\n## Usage\n\n```crystal\nrequire \"crest\"\n```\n\nBasic usage:\n\n```crystal\nCrest.get(\n  \"http://httpbin.org/get\",\n  params: {:lang => \"en\"}\n)\n# curl -L \"http://httpbin.org/get?lang=en\"\n\nCrest.post(\n  \"http://httpbin.org/post\",\n  form: {:age => 27, :name => {:first => \"Kurt\", :last => \"Cobain\"}}\n)\n# curl -L --data \"age=27&name[first]=Kurt&name[last]=Cobain\" -X POST \"http://httpbin.org/post\"\n```\n\n### Request\n\n`Crest::Request` accept next parameters:\n\nMandatory parameters:\n\n* `:method` - HTTP method (`:get`. `:post`, `:put`, `:patch`,  `:delete`, `:options`)\n* `:url` - URL (e.g.: `http://httpbin.org/ip`)\n\nOptional parameters:\n\n* `:headers` -  a hash containing the request headers\n* `:cookies` -  a hash containing the request cookies\n* `:form` -  a hash containing form params\n* `:params` -  a hash that represent query-string separated from the preceding part by a question mark (`?`) a sequence of attributeâ€“value pairs separated by a delimiter (`&`)\n* `:user` and `:password` -  for Basic Authentication\n* `:tls` - client certificates, you can pass in a custom `OpenSSL::SSL::Context::Client` (default to `nil`)\n* `:p_addr`, `:p_port`, `:p_user`, and `:p_pass` - specify a per-request proxy by passing these parameters\n* `:max_redirects` -  maximum number of redirections (default to 10)\n* `:logging` -  enable logging (default to `false`)\n* `:logger` -  set logger (default to `Crest::CommonLogger`)\n* `:handle_errors` - error handling (default to `true`)\n* `:http_client` - instance of `HTTP::Client`\n\nMore detailed examples:\n\n```crystal\nrequest = Crest::Request.new(:post,\n  \"http://httpbin.org/post\",\n  headers: {\"Content-Type\" => \"application/json\"},\n  form: {:width => 640, \"height\" => \"480\"}\n)\nrequest.execute\n# curl -L --data \"width=640&height=480\" --header \"Content-Type: application/json\" -X POST \"http://httpbin.org/post\"\n```\n\n```crystal\nCrest::Request.execute(:get,\n  \"http://httpbin.org/get\",\n  params: {:width => 640, \"height\" => \"480\"},\n  headers: {\"Content-Type\" => \"application/json\"})\n)\n# curl -L --header \"Content-Type: application/json\" \"http://httpbin.org/get?width=640&height=480\"\n```\n\n```crystal\nCrest::Request.get(\n  \"http://httpbin.org/get\",\n  p_addr: \"127.0.0.1\",\n  p_port: 3128,\n  p_user: \"admin\",\n  p_pass: \"1234\"\n)\n# curl -L --proxy http://127.0.0.1:3128 --proxy-user admin:1234 \"http://httpbin.org/get\"\n```\n\nA block can be passed to the `Crest::Request` instance.\n\nThis block will then be called with the `Crest::Request`.\n\n```crystal\nrequest = Crest::Request.new(:get, \"http://httpbin.org/headers\") do |request|\n  request.headers.add(\"foo\", \"bar\")\nend\n\nrequest.execute\n# curl -L --header \"foo: bar\" http://httpbin.org/headers\n```\n\n### Resource\n\nA `Crest::Resource` class can be instantiated for access to a RESTful resource,\nincluding authentication, proxy and logging.\n\nAdditionally, you can set default `params` and `headers` separately.\nSo can use `Crest::Resource` to share common `headers` and `params`.\n\nThe final `headers` and `params` consist of:\n\n* default headers from initializer\n* headers provided in call method (`get`, `post`, etc)\n\nThis is especially useful if you wish to define your site in one place and\ncall it in multiple locations.\n\n```crystal\nresource = Crest::Resource.new(\n  \"http://httpbin.org\",\n  params: {\"key\" => \"value\"},\n  headers: {\"Content-Type\" => \"application/json\"}\n)\n\nresponse[\"/get\"].get(\n  headers: {\"Auth-Token\" => \"secret\"}\n)\n\nresponse[\"/post\"].post(\n  form: {:height => 100, \"width\" => \"100\"},\n  params: {:secret => \"secret\"}\n)\n```\n\nUse the `[]` syntax to allocate subresources:\n\n```crystal\nsite = Crest::Resource.new(\"http://httpbin.org\")\n\nsite[\"/post\"].post({:param1 => \"value1\", :param2 => \"value2\"})\n# curl -L --data \"param1=value1&param2=value2\" -X POST http://httpbin.org/post\n```\n\nYou can pass `suburl` through `Request#http_verb` methods:\n\n```crystal\nsite = Crest::Resource.new(\"http://httpbin.org\")\n\nsite.post(\"/post\", form: {:param1 => \"value1\", :param2 => \"value2\"})\n# curl -L --data \"param1=value1&param2=value2\" -X POST http://httpbin.org/post\n\nsite.get(\"/get\", params: {:status => \"active\"})\n# curl -L http://httpbin.org/get?status=active\n```\n\nA block can be passed to the `Crest::Resource` instance.\n\nThis block will then be called with the `Crest::Resource`.\n\n```crystal\nresource = Crest::Resource.new(\"http://httpbin.org\") do |resource|\n  resource.headers.merge!({\"foo\" => \"bar\"})\nend\n\nresource[\"/headers\"].get\n```\n\nWith HTTP basic authentication:\n\n```crystal\nresource = Crest::Resource.new(\n  \"http://httpbin.org/basic-auth/user/passwd\",\n  user: \"user\",\n  password: \"passwd\"\n)\n```\n\nWith Proxy authentication:\n\n```crystal\nresource = Crest::Resource.new(\n  \"http://httpbin.org/get\",\n  p_host: \"localhost\",\n  p_port: 3128\n)\n```\n\n### Result handling\n\nThe result of a `Crest::Request` and `Crest::Resource` is a `Crest::Response` object.\n\nResponse objects have several useful methods.\n\n* `Response#body`: The response body as a string\n* `Response#status_code`: The HTTP response code\n* `Response#headers`: A hash of HTTP response headers\n* `Response#cookies`: A hash of HTTP cookies set by the server\n* `Response#request`: The `Crest::Request` object used to make the request\n* `Response#http_client_res`: The `HTTP::Client::Response` object\n* `Response#history`: A list of each response received in a redirection chain\n\n### Exceptions\n\n* for result codes between `200` and `207`, a `Crest::Response` will be returned\n* for result codes `301`, `302`, `303` or `307`, the redirection will be followed and the request transformed into a `GET`\n* for other cases, a `Crest::RequestFailed` holding the Response will be raised\n* call `.response` on the exception to get the server's response\n\n```crystal\nCrest.get(\"http://httpbin.org/status/404\")\n# => HTTP status code 404: Not Found (Crest::NotFound)\n\nbegin\n  Crest.get(\"http://httpbin.org/status/404\")\nrescue ex : Crest::NotFound\n  puts ex.response\nend\n```\n\nTo not raise exceptions but return the `Crest::Response` you can set `:handle_errors => false`.\n\n```crystal\nresponse = Crest.get(\"http://httpbin.org/status/404\", handle_errors: false)\nresponse.status_code # => 404\n```\n\n### Advanced Usage\n\nThis section covers some of `crest` more advanced features.\n\n#### Multipart\n\nYeah, that's right! This does multipart sends for you!\n\n```crystal\nfile = File.open(\"#{__DIR__}/example.png\")\nCrest.post(\"http://httpbin.org/post\", form: {:image => file})\n```\n\n```crystal\nfile = File.open(\"#{__DIR__}/example.png\")\nresource = Crest::Resource.new(\"https://httpbin.org\")\nresponse = resource[\"/post\"].post(form: {:image => file})\n```\n\n#### JSON payload\n\n`crest` does not speak JSON natively, so serialize your *form* to a string before passing it to `crest`.\n\n```crystal\nCrest.post(\n  \"http://httpbin.org/post\",\n  headers: {\"Content-Type\" => \"application/json\"},\n  form: {:foo => \"bar\"}.to_json\n)\n```\n\n#### Headers\n\nRequest headers can be set by passing a hash containing keys and values representing header names and values:\n\n```crystal\nresponse = Crest.get(\n  \"http://httpbin.org/bearer\",\n  headers: {\"Authorization\" => \"Bearer cT0febFoD5lxAlNAXHo6g\"}\n)\nresponse.headers\n# => {\"Authorization\" => [\"Bearer cT0febFoD5lxAlNAXHo6g\"]}\n```\n\n#### Cookies\n\n`Request` and `Response` objects know about HTTP cookies, and will automatically extract and set headers for them as needed:\n\n```crystal\nresponse = Crest.get(\n  \"http://httpbin.org/cookies/set\",\n  params: {\"k1\" => \"v1\", \"k2\" => \"v2\"}\n)\nresponse.cookies\n# => {\"k1\" => \"v1\", \"k2\" => \"v2\"}\n```\n\n```crystal\nresponse = Crest.get(\n  \"http://httpbin.org/cookies\",\n  cookies: {\"k1\" => \"v1\"}\n)\nresponse.cookies\n# => {\"k1\" => \"v1\"}\n```\n\n#### Basic authentication\n\nFor basic access authentication for an HTTP user agent you should to provide a `user` name and `password` when making a request.\n\n```crystal\nCrest.get(\n  \"http://httpbin.org/basic-auth/user/passwd\",\n  user: \"user\",\n  password: \"passwd\"\n)\n# curl -L --user user:passwd http://httpbin.org/basic-auth/user/passwd\n```\n\n#### SSL/TLS support\n\nIf `tls` is given it will be used:\n\n```crystal\nCrest.get(\"https://expired.badssl.com\", tls: OpenSSL::SSL::Context::Client.insecure)\n```\n\n#### Proxy\n\nIf you need to use a proxy, you can configure individual requests with the proxy host and port arguments to any request method:\n\n```crystal\nCrest.get(\n  \"http://httpbin.org/ip\",\n  p_addr: \"localhost\",\n  p_port: 3128\n)\n```\n\nTo use HTTP Basic Auth with your proxy, use next syntax:\n\n```crystal\nCrest.get(\n  \"http://httpbin.org/ip\",\n  p_addr: \"localhost\",\n  p_port: 3128,\n  p_user: \"user\",\n  p_pass: \"qwerty\"\n)\n```\n\n#### Logging\n\n> `Logger` class is completely taken from [halite](https://github.com/icyleaf/halite) shard.\n> Thanks [icyleaf](https://github.com/icyleaf)!\n\nBy default, the `Crest` does not enable logging. You can enable it per request by setting `logging: true`:\n\n```crystal\nCrest.get(\"http://httpbin.org/get\", logging: true)\n```\n\n##### Filter sensitive information from logs with a regex matcher\n\n```crystal\nresource = Crest::Request.get(\"http://httpbin.org/get\", params: {api_key => \"secret\"}, logging: true) do |request|\n  request.logger.filter(/(api_key=)(\\w+)/, \"\\\\1[REMOVED]\")\nend\n\n# => crest | 2018-07-04 14:49:49 | GET | http://httpbin.org/get?api_key=[REMOVED]\n```\n\n##### Customize logger\n\nYou can create the custom logger by integration `Crest::Logger` abstract class.\nHere has two methods must be implement: `Crest::Logger.request` and `Crest::Logger.response`.\n\n```crystal\nclass MyLogger < Crest::Logger\n  def request(request)\n    @logger.info \">> | %s | %s\" % [request.method, request.url]\n  end\n\n  def response(response)\n    @logger.info \"<< | %s | %s\" % [response.status_code, response.url]\n  end\nend\n\nCrest.get(\"http://httpbin.org/get\", logging: true, logger: MyLogger.new)\n```\n\n#### Redirection\n\nBy default, `crest` will follow HTTP 30x redirection requests.\n\nTo disable automatic redirection, set `:max_redirects => 0`.\n\n```crystal\nCrest::Request.execute(method: :get, url: \"http://httpbin.org/redirect/1\", max_redirects: 0)\n# => Crest::Found: 302 Found\n```\n\n#### Access HTTP::Client\n\nYou can access `HTTP::Client` via the `http_client` instance method.\n\nThis is usually used to set additional options (e.g. read timeout, authorization header etc.)\n\n```crystal\nclient = HTTP::Client.new(\"http://httpbin.org\")\nclient.read_timeout = 1.second\n\nbegin\n  Crest::Request.new(:get,\n    \"http://httpbin.org/delay/10\",\n    http_client: client\n  )\nrescue IO::Timeout\n  puts \"Timeout!\"\nend\n```\n\n```crystal\nclient = HTTP::Client.new(\"http://httpbin.org\")\nclient.read_timeout = 1.second\n\nbegin\n  resource = Crest::Resource.new(\"http://httpbin.org\", http_client: client)\n  resource.get(\"/delay/10\")\nrescue IO::Timeout\n  puts \"Timeout!\"\nend\n```\n\n#### Convert Request object to cURL command\n\nUse `to_curl` method on instance of `Crest::Request` to convert request to cURL command.\n\n```crystal\nrequest = Crest::Request.new(\n  :post,\n  \"http://httpbin.org/post\",\n  form: {\"title\" => \"New Title\", \"author\" => \"admin\"}\n)\nrequest.to_curl\n# => curl -X POST http://httpbin.org/post -d 'title=New+Title&author=admin' -H 'Content-Type: application/x-www-form-urlencoded'\n```\n\n```crystal\nrequest = Crest::Request.new(\n  :get,\n  \"http://httpbin.org/basic-auth/user/passwd\",\n  user: \"user\",\n  password: \"passwd\"\n)\nrequest.to_curl\n# => curl -X GET http://httpbin.org/basic-auth/user/passwd --user user:passwd\n```\n\nAlso you can directly use `Crest::Curlify` which accept instance of `Crest::Request`\n\n```crystal\nrequest = Crest::Request.new(:get, \"http://httpbin.org\")\nCrest::Curlify.new(request).to_curl\n# => curl -X GET http://httpbin.org\n```\n\n## Development\n\nInstall dependencies:\n\n```console\nshards\n```\n\nTo run test:\n\n```console\nmake test\n```\n\n### Workbook\n\n```console\ncrystal play\nopen http://localhost:8080\n```\n\nThen select the Workbook -> Requests from the menu.\n\n## Contributing\n\n1. Fork it ( https://github.com/mamantoha/crest/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n* [mamantoha](https://github.com/mamantoha) Anton Maminov - creator, maintainer\n* [icyleaf](https://github.com/icyleaf) Icyleaf Wang - logging support\n* [psikoz](https://github.com/psikoz) Logo design\n\n## License\n\nCopyright: 2017-2018 Anton Maminov (anton.maminov@gmail.com)\n\nThis library is distributed under the MIT license. Please see the LICENSE file.\n","program":{"html_id":"github.com/mamantoha/crest/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/mamantoha/crest","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/mamantoha/crest/Crest","path":"Crest.html","kind":"module","full_name":"Crest","name":"Crest","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crest.cr","line_number":30,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr"},{"filename":"crest/curlify.cr","line_number":1,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/curlify.cr"},{"filename":"crest/response.cr","line_number":4,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr"},{"filename":"crest/exceptions.cr","line_number":3,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr"},{"filename":"crest/form.cr","line_number":1,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr"},{"filename":"crest/logger.cr","line_number":7,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr"},{"filename":"crest/loggers/common_logger.cr","line_number":8,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/loggers/common_logger.cr"},{"filename":"crest/request.cr","line_number":3,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr"},{"filename":"crest/resource.cr","line_number":3,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr"},{"filename":"crest/utils.cr","line_number":1,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/utils.cr"},{"filename":"crest/forms/data_form.cr","line_number":3,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/data_form.cr"},{"filename":"crest/forms/urlencoded_form.cr","line_number":3,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/urlencoded_form.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"EXCEPTIONS_MAP","name":"EXCEPTIONS_MAP","value":"{} of Int32 => Crest::RequestFailed.class","doc":null,"summary":null},{"id":"HTTP_METHODS","name":"HTTP_METHODS","value":"[\"get\", \"delete\", \"post\", \"put\", \"patch\", \"options\"] of ::String","doc":null,"summary":null},{"id":"STATUSES","name":"STATUSES","value":"{100 => \"Continue\", 101 => \"Switching Protocols\", 102 => \"Processing\", 200 => \"OK\", 201 => \"Created\", 202 => \"Accepted\", 203 => \"Non-Authoritative Information\", 204 => \"No Content\", 205 => \"Reset Content\", 206 => \"Partial Content\", 207 => \"Multi-Status\", 208 => \"Already Reported\", 226 => \"IM Used\", 300 => \"Multiple Choices\", 301 => \"Moved Permanently\", 302 => \"Found\", 303 => \"See Other\", 304 => \"Not Modified\", 305 => \"Use Proxy\", 306 => \"Switch Proxy\", 307 => \"Temporary Redirect\", 308 => \"Permanent Redirect\", 400 => \"Bad Request\", 401 => \"Unauthorized\", 402 => \"Payment Required\", 403 => \"Forbidden\", 404 => \"Not Found\", 405 => \"Method Not Allowed\", 406 => \"Not Acceptable\", 407 => \"Proxy Authentication Required\", 408 => \"Request Timeout\", 409 => \"Conflict\", 410 => \"Gone\", 411 => \"Length Required\", 412 => \"Precondition Failed\", 413 => \"Payload Too Large\", 414 => \"URI Too Long\", 415 => \"Unsupported Media Type\", 416 => \"Range Not Satisfiable\", 417 => \"Expectation Failed\", 418 => \"I\\\"m A Teapot\", 421 => \"Too Many Connections From This IP\", 422 => \"Unprocessable Entity\", 423 => \"Locked\", 424 => \"Failed Dependency\", 425 => \"Unordered Collection\", 426 => \"Upgrade Required\", 428 => \"Precondition Required\", 429 => \"Too Many Requests\", 431 => \"Request Header Fields Too Large\", 449 => \"Retry With\", 450 => \"Blocked By Windows Parental Controls\", 500 => \"Internal Server Error\", 501 => \"Not Implemented\", 502 => \"Bad Gateway\", 503 => \"Service Unavailable\", 504 => \"Gateway Timeout\", 505 => \"HTTP Version Not Supported\", 506 => \"Variant Also Negotiates\", 507 => \"Insufficient Storage\", 508 => \"Loop Detected\", 509 => \"Bandwidth Limit Exceeded\", 510 => \"Not Extended\", 511 => \"Network Authentication Required\"}","doc":"Hash of HTTP status code => message.","summary":"<p>Hash of HTTP status code => message.</p>"},{"id":"VERSION","name":"VERSION","value":"{{ (`shards version /home/travis/build/mamantoha/crest/src`).chomp.stringify }}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"This module's static methods are the entry point for using the Crest client.\n\nSuported HTTP methods: `get`, `put`, `post`, `patch` `delete`, `options`\n\nExamples:\n\n```crystal\nCrest.get(\n  \"http://example.com/resource\",\n  headers: {\"Content-Type\" => \"image/jpg\"},\n  params: {\"lang\" => \"en\"}\n)\n\nCrest.post(\n  \"http://httpbin.org/post\",\n  headers: {\"Access-Token\" => [\"secret1\", \"secret2\"]},\n  form: {:fizz => \"buz\"},\n  logging: true,\n)\n\nCrest.get(\"http://example.com/resource\") do |request|\n  request.headers.add(\"Content-Type\", \"image/jpg\")\nend\n```","summary":"<p>This module's static methods are the entry point for using the Crest client.</p>","class_methods":[{"id":"delete(url:String,**args,&block):Crest::Response-class-method","html_id":"delete(url:String,**args,&amp;block):Crest::Response-class-method","name":"delete","doc":"Execute a DELETE request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest.delete(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\nend\n```","summary":"<p>Execute a DELETE request and and yields the <code><a href=\"Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"delete","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:delete, url, **args)\nyield request\nexec(request)\n"}},{"id":"delete(url:String,**args):Crest::Response-class-method","html_id":"delete(url:String,**args):Crest::Response-class-method","name":"delete","doc":"Execute a DELETE request and returns a `Crest::Response`.\n\n```crystal\nCrest.delete(\"http://www.example.com\")\n```","summary":"<p>Execute a DELETE request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"delete","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"delete(url, **args) do\nend"}},{"id":"get(url:String,**args,&block):Crest::Response-class-method","html_id":"get(url:String,**args,&amp;block):Crest::Response-class-method","name":"get","doc":"Execute a GET request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest.get(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\nend\n```","summary":"<p>Execute a GET request and and yields the <code><a href=\"Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"get","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:get, url, **args)\nyield request\nexec(request)\n"}},{"id":"get(url:String,**args):Crest::Response-class-method","html_id":"get(url:String,**args):Crest::Response-class-method","name":"get","doc":"Execute a GET request and returns a `Crest::Response`.\n\n```crystal\nCrest.get(\"http://www.example.com\")\n```","summary":"<p>Execute a GET request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"get","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"get(url, **args) do\nend"}},{"id":"options(url:String,**args,&block):Crest::Response-class-method","html_id":"options(url:String,**args,&amp;block):Crest::Response-class-method","name":"options","doc":"Execute a OPTIONS request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest.options(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\nend\n```","summary":"<p>Execute a OPTIONS request and and yields the <code><a href=\"Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"options","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:options, url, **args)\nyield request\nexec(request)\n"}},{"id":"options(url:String,**args):Crest::Response-class-method","html_id":"options(url:String,**args):Crest::Response-class-method","name":"options","doc":"Execute a OPTIONS request and returns a `Crest::Response`.\n\n```crystal\nCrest.options(\"http://www.example.com\")\n```","summary":"<p>Execute a OPTIONS request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"options","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"options(url, **args) do\nend"}},{"id":"patch(url:String,**args,&block):Crest::Response-class-method","html_id":"patch(url:String,**args,&amp;block):Crest::Response-class-method","name":"patch","doc":"Execute a PATCH request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest.patch(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\nend\n```","summary":"<p>Execute a PATCH request and and yields the <code><a href=\"Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"patch","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:patch, url, **args)\nyield request\nexec(request)\n"}},{"id":"patch(url:String,**args):Crest::Response-class-method","html_id":"patch(url:String,**args):Crest::Response-class-method","name":"patch","doc":"Execute a PATCH request and returns a `Crest::Response`.\n\n```crystal\nCrest.patch(\"http://www.example.com\")\n```","summary":"<p>Execute a PATCH request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"patch","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"patch(url, **args) do\nend"}},{"id":"post(url:String,**args,&block):Crest::Response-class-method","html_id":"post(url:String,**args,&amp;block):Crest::Response-class-method","name":"post","doc":"Execute a POST request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest.post(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\nend\n```","summary":"<p>Execute a POST request and and yields the <code><a href=\"Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"post","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:post, url, **args)\nyield request\nexec(request)\n"}},{"id":"post(url:String,**args):Crest::Response-class-method","html_id":"post(url:String,**args):Crest::Response-class-method","name":"post","doc":"Execute a POST request and returns a `Crest::Response`.\n\n```crystal\nCrest.post(\"http://www.example.com\")\n```","summary":"<p>Execute a POST request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"post","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"post(url, **args) do\nend"}},{"id":"put(url:String,**args,&block):Crest::Response-class-method","html_id":"put(url:String,**args,&amp;block):Crest::Response-class-method","name":"put","doc":"Execute a PUT request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest.put(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\nend\n```","summary":"<p>Execute a PUT request and and yields the <code><a href=\"Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"put","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:put, url, **args)\nyield request\nexec(request)\n"}},{"id":"put(url:String,**args):Crest::Response-class-method","html_id":"put(url:String,**args):Crest::Response-class-method","name":"put","doc":"Execute a PUT request and returns a `Crest::Response`.\n\n```crystal\nCrest.put(\"http://www.example.com\")\n```","summary":"<p>Execute a PUT request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr#L45","def":{"name":"put","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"put(url, **args) do\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/mamantoha/crest/Crest/CommonLogger","path":"Crest/CommonLogger.html","kind":"class","full_name":"Crest::CommonLogger","name":"CommonLogger","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Crest/Logger","kind":"class","full_name":"Crest::Logger","name":"Logger"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Crest/Logger","kind":"class","full_name":"Crest::Logger","name":"Logger"},{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/loggers/common_logger.cr","line_number":9,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/loggers/common_logger.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"request(request)-instance-method","html_id":"request(request)-instance-method","name":"request","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":""}],"args_string":"(request)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/loggers/common_logger.cr#L10","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/loggers/common_logger.cr#L10","def":{"name":"request","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message = String.build do |io|\n  (io << \"| \") << (colorful_method(request.method))\n  (io << \" | \") << request.url\n  if request.form_data.nil?\n  else\n    (io << \" | \") << request.form_data.to_s.inspect\n  end\nend.to_s\ninfo(message)\n"}},{"id":"response(response)-instance-method","html_id":"response(response)-instance-method","name":"response","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"args_string":"(response)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/loggers/common_logger.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/loggers/common_logger.cr#L20","def":{"name":"response","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message = String.build do |io|\n  (io << \"| \") << (colorful_status_code(response.status_code))\n  (io << \" | \") << response.url\n  (io << \" | \") << response.body.inspect\nend.to_s\ninfo(message)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Curlify","path":"Crest/Curlify.html","kind":"class","full_name":"Crest::Curlify","name":"Curlify","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/curlify.cr","line_number":9,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/curlify.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"Class to convert `Crest::Request` object to cURL command\n\n```crystal\nrequest = Crest::Request.new(:post, \"http://httpbin.org/post\", form: {\"title\" => \"New Title\"})\nCrest::Curlify.to_curl(request)\n=> \"curl -X POST http://httpbin.org/post -d 'title=New+Title' -H 'Content-Type: application/x-www-form-urlencoded'\"\n```","summary":"<p>Class to convert <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> object to cURL command</p>","class_methods":[{"id":"to_curl(request:Crest::Request)-class-method","html_id":"to_curl(request:Crest::Request)-class-method","name":"to_curl","doc":"Returns string with cURL command by provided `Crest::Request` object","summary":"<p>Returns string with cURL command by provided <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> object</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(request : Crest::Request)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/curlify.cr#L11","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/curlify.cr#L11","def":{"name":"to_curl","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(request)).to_curl"}}],"constructors":[{"id":"new(request:Crest::Request)-class-method","html_id":"new(request:Crest::Request)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(request : Crest::Request)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/curlify.cr#L15","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/curlify.cr#L15","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_curl-instance-method","html_id":"to_curl-instance-method","name":"to_curl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/curlify.cr#L18","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/curlify.cr#L18","def":{"name":"to_curl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"curl\", method, url, basic_auth, form_data, headers].reject(&.empty?).join(\" \")"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/DataForm","path":"Crest/DataForm.html","kind":"class","full_name":"Crest::DataForm(T)","name":"DataForm","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Crest/Form","kind":"class","full_name":"Crest::Form","name":"Form"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Crest/Form","kind":"class","full_name":"Crest::Form","name":"Form"},{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/forms/data_form.cr","line_number":9,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/data_form.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"This class lets `crest` emulate a filled-in form\nin which a user has pressed the submit button.\nThis causes `crest` to POST data using the\n\"Content-Type\" `multipart/form-data according` to RFC 2388.\nThis enables uploading of binary files etc.","summary":"<p>This class lets <code>crest</code> emulate a filled-in form in which a user has pressed the submit button.</p>","class_methods":[],"constructors":[{"id":"new(params:T)-class-method","html_id":"new(params:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"args_string":"(params : T)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L12","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L12","def":{"name":"new","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DataForm(T).allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"generate-instance-method","html_id":"generate-instance-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/data_form.cr#L10","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/data_form.cr#L10","def":{"name":"generate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"content_type_ch = Channel(String).new(1)\nio = IO::Memory.new\nHTTP::FormData.build(io) do |formdata|\n  content_type_ch.send(formdata.content_type)\n  parsed_params.each do |name, value|\n    add_field(formdata, name.to_s, value)\n  end\nend\n@form_data = io.to_s\n@content_type = content_type_ch.receive\nself\n"}},{"id":"parsed_params-instance-method","html_id":"parsed_params-instance-method","name":"parsed_params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/data_form.cr#L30","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/data_form.cr#L30","def":{"name":"parsed_params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Crest::Utils.flatten_params(@params)"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Form","path":"Crest/Form.html","kind":"class","full_name":"Crest::Form(T)","name":"Form","abstract":true,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/form.cr","line_number":2,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/mamantoha/crest/Crest/DataForm","kind":"class","full_name":"Crest::DataForm(T)","name":"DataForm"},{"html_id":"github.com/mamantoha/crest/Crest/UrlencodedForm","kind":"class","full_name":"Crest::UrlencodedForm(T)","name":"UrlencodedForm"}],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[{"id":"generate(params:Hash)-class-method","html_id":"generate(params:Hash)-class-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash"}],"args_string":"(params : Hash)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L8","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L8","def":{"name":"generate","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(params)).generate"}}],"constructors":[{"id":"new(params:T)-class-method","html_id":"new(params:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"args_string":"(params : T)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L12","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L12","def":{"name":"new","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Form(T).allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"content_type-instance-method","html_id":"content_type-instance-method","name":"content_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L6","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L6","def":{"name":"content_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content_type"}},{"id":"form_data-instance-method","html_id":"form_data-instance-method","name":"form_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L6","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L6","def":{"name":"form_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@form_data"}},{"id":"generate-instance-method","html_id":"generate-instance-method","name":"generate","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L15","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L15","def":{"name":"generate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"params-instance-method","html_id":"params-instance-method","name":"params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L6","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L6","def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Logger","path":"Crest/Logger.html","kind":"class","full_name":"Crest::Logger","name":"Logger","abstract":true,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/logger.cr","line_number":8,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/mamantoha/crest/Crest/CommonLogger","kind":"class","full_name":"Crest::CommonLogger","name":"CommonLogger"}],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(filename:String)-class-method","html_id":"new(filename:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L9","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L9","def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(File.open(filename, \"w\"))"}},{"id":"new(io:IO=STDOUT)-class-method","html_id":"new(io:IO=STDOUT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"args_string":"(io : IO = <span class=\"t\">STDOUT</span>)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L15","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L15","def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_formatter-instance-method","html_id":"default_formatter-instance-method","name":"default_formatter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L26","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L26","def":{"name":"default_formatter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Logger::Formatter.new do |_, datetime, progname, message, io|\n  io << progname\n  (io << \" | \") << (datetime.to_s(\"%F %T\"))\n  (io << \" \") << message\nend"}},{"id":"filter(patern:String|Regex,replacement:String)-instance-method","html_id":"filter(patern:String|Regex,replacement:String)-instance-method","name":"filter","doc":null,"summary":null,"abstract":false,"args":[{"name":"patern","doc":null,"default_value":"","external_name":"patern","restriction":"String | Regex"},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":"String"}],"args_string":"(patern : String | Regex, replacement : String)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L38","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L38","def":{"name":"filter","args":[{"name":"patern","doc":null,"default_value":"","external_name":"patern","restriction":"String | Regex"},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@filters.push([patern, replacement])"}},{"id":"info(message:String)-instance-method","html_id":"info(message:String)-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L34","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L34","def":{"name":"info","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger.info(apply_filters(message))"}},{"id":"request(request:Crest::Request):String-instance-method","html_id":"request(request:Crest::Request):String-instance-method","name":"request","doc":null,"summary":null,"abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(request : Crest::Request) : String","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L23","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L23","def":{"name":"request","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"response(response:Crest::Response):String-instance-method","html_id":"response(response:Crest::Response):String-instance-method","name":"response","doc":null,"summary":null,"abstract":true,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Crest::Response"}],"args_string":"(response : Crest::Response) : String","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L24","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L24","def":{"name":"response","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Crest::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/logger.cr#L13","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @logger.\n{{ call }}\n\n    \n"}}],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Params","path":"Crest/Params.html","kind":"alias","full_name":"Crest::Params","name":"Params","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crest.cr","line_number":35,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":true,"aliased":"(Hash(String | Symbol, Int32 | String) | Hash(String, Int32 | String) | Hash(String, Int32) | Hash(String, String) | Hash(Symbol, Int32 | String) | Hash(Symbol, Int32) | Hash(Symbol, String))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Request","path":"Crest/Request.html","kind":"class","full_name":"Crest::Request","name":"Request","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/request.cr","line_number":48,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"A class that used to make the requests\nThe result of a `Crest::Request` is a `Crest::Response` object.\n\nSimple example:\n\n```crystal\nrequest = Crest::Request.new(method: :post, url: \"http://example.com/user\", form: {:age => 27}, params: {:name => \"Kurt\"})\nrequest.execute\n\nCrest::Request.execute(method: :post, url: \"http://example.com/user\", form: {:age => 27}.to_json)\n\nCrest::Request.post(url: \"http://example.com/user\", form: {:age => 27}.to_json)\n```\n\nBlock style:\n\n```crystal\nrequest = Crest::Request.new(:get, \"http://example.com\") do |request|\n  request.headers.add(\"foo\", \"bar\")\n  request.user = \"username\"\n  request.password = \"password\"\nend\n\nresponse = request.execute\n```\n\nMandatory parameters:\n* `method`\n* `url`\n\nOptional parameters:\n* `headers` a hash containing the request headers\n* `cookies` a hash containing the request cookies\n* `form` a hash containing form params (or a raw string)\n* `params` a hash that represent query-string separated from the preceding part by a question mark (?)\n   a sequence of attributeâ€“value pairs separated by a delimiter (&).\n* `user` and `password` for basic auth\n* `tls` configuring TLS settings\n* `p_addr`, `p_port`, `p_user`, `p_pass` for proxy\n* `max_redirects` maximum number of redirections (default to `10`)\n* `logging` enable logging (default to `false`)\n* `logger` set logger (default to `Crest::CommonLogger`)\n* `handle_errors` error handling (default to `true`)\n* `http_client` instance of `HTTP::Client`","summary":"<p>A class that used to make the requests The result of a <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> is a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> object.</p>","class_methods":[{"id":"delete(url:String,**args,&block):Crest::Response-class-method","html_id":"delete(url:String,**args,&amp;block):Crest::Response-class-method","name":"delete","doc":"Execute a DELETE request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest::Request.delete(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\n  request.user = \"username\"\n  request.password = \"password\"\nend\n```","summary":"<p>Execute a DELETE request and and yields the <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"delete","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:delete, url, **args)\nyield request\nrequest.basic_auth!(request.user, request.password)\nrequest.execute\n"}},{"id":"delete(url:String,**args):Crest::Response-class-method","html_id":"delete(url:String,**args):Crest::Response-class-method","name":"delete","doc":"Execute a DELETE request and returns a `Crest::Response`.\n\n```crystal\nCrest::Request.delete(\"http://www.example.com\")\n```","summary":"<p>Execute a DELETE request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"delete","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"delete(url, **args) do\nend"}},{"id":"execute(method,url,**args)-class-method","html_id":"execute(method,url,**args)-class-method","name":"execute","doc":null,"summary":null,"abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":""}],"args_string":"(method, url, **args)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L77","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L77","def":{"name":"execute","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request = new(method, url, **args)\nrequest.execute\n"}},{"id":"get(url:String,**args,&block):Crest::Response-class-method","html_id":"get(url:String,**args,&amp;block):Crest::Response-class-method","name":"get","doc":"Execute a GET request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest::Request.get(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\n  request.user = \"username\"\n  request.password = \"password\"\nend\n```","summary":"<p>Execute a GET request and and yields the <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"get","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:get, url, **args)\nyield request\nrequest.basic_auth!(request.user, request.password)\nrequest.execute\n"}},{"id":"get(url:String,**args):Crest::Response-class-method","html_id":"get(url:String,**args):Crest::Response-class-method","name":"get","doc":"Execute a GET request and returns a `Crest::Response`.\n\n```crystal\nCrest::Request.get(\"http://www.example.com\")\n```","summary":"<p>Execute a GET request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"get","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"get(url, **args) do\nend"}},{"id":"options(url:String,**args,&block):Crest::Response-class-method","html_id":"options(url:String,**args,&amp;block):Crest::Response-class-method","name":"options","doc":"Execute a OPTIONS request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest::Request.options(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\n  request.user = \"username\"\n  request.password = \"password\"\nend\n```","summary":"<p>Execute a OPTIONS request and and yields the <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"options","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:options, url, **args)\nyield request\nrequest.basic_auth!(request.user, request.password)\nrequest.execute\n"}},{"id":"options(url:String,**args):Crest::Response-class-method","html_id":"options(url:String,**args):Crest::Response-class-method","name":"options","doc":"Execute a OPTIONS request and returns a `Crest::Response`.\n\n```crystal\nCrest::Request.options(\"http://www.example.com\")\n```","summary":"<p>Execute a OPTIONS request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"options","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"options(url, **args) do\nend"}},{"id":"patch(url:String,**args,&block):Crest::Response-class-method","html_id":"patch(url:String,**args,&amp;block):Crest::Response-class-method","name":"patch","doc":"Execute a PATCH request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest::Request.patch(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\n  request.user = \"username\"\n  request.password = \"password\"\nend\n```","summary":"<p>Execute a PATCH request and and yields the <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"patch","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:patch, url, **args)\nyield request\nrequest.basic_auth!(request.user, request.password)\nrequest.execute\n"}},{"id":"patch(url:String,**args):Crest::Response-class-method","html_id":"patch(url:String,**args):Crest::Response-class-method","name":"patch","doc":"Execute a PATCH request and returns a `Crest::Response`.\n\n```crystal\nCrest::Request.patch(\"http://www.example.com\")\n```","summary":"<p>Execute a PATCH request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"patch","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"patch(url, **args) do\nend"}},{"id":"post(url:String,**args,&block):Crest::Response-class-method","html_id":"post(url:String,**args,&amp;block):Crest::Response-class-method","name":"post","doc":"Execute a POST request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest::Request.post(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\n  request.user = \"username\"\n  request.password = \"password\"\nend\n```","summary":"<p>Execute a POST request and and yields the <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"post","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:post, url, **args)\nyield request\nrequest.basic_auth!(request.user, request.password)\nrequest.execute\n"}},{"id":"post(url:String,**args):Crest::Response-class-method","html_id":"post(url:String,**args):Crest::Response-class-method","name":"post","doc":"Execute a POST request and returns a `Crest::Response`.\n\n```crystal\nCrest::Request.post(\"http://www.example.com\")\n```","summary":"<p>Execute a POST request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"post","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"post(url, **args) do\nend"}},{"id":"put(url:String,**args,&block):Crest::Response-class-method","html_id":"put(url:String,**args,&amp;block):Crest::Response-class-method","name":"put","doc":"Execute a PUT request and and yields the `Crest::Request` to the block.\n\n```crystal\nCrest::Request.put(\"http://www.example.com\") do |request|\n  request.headers.add(\"Content-Type\", \"application/json\")\n  request.user = \"username\"\n  request.password = \"password\"\nend\n```","summary":"<p>Execute a PUT request and and yields the <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"put","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:put, url, **args)\nyield request\nrequest.basic_auth!(request.user, request.password)\nrequest.execute\n"}},{"id":"put(url:String,**args):Crest::Response-class-method","html_id":"put(url:String,**args):Crest::Response-class-method","name":"put","doc":"Execute a PUT request and returns a `Crest::Response`.\n\n```crystal\nCrest::Request.put(\"http://www.example.com\")\n```","summary":"<p>Execute a PUT request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L135","def":{"name":"put","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"put(url, **args) do\nend"}}],"constructors":[{"id":"new(method:Symbol,url:String,*,headers={}ofString=>String,cookies={}ofString=>String,form={}ofString=>String,params={}ofString=>String,max_redirects=10,**options,&block)-class-method","html_id":"new(method:Symbol,url:String,*,headers={}ofString=&gt;String,cookies={}ofString=&gt;String,form={}ofString=&gt;String,params={}ofString=&gt;String,max_redirects=10,**options,&amp;block)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Symbol"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"cookies","doc":null,"default_value":"{} of String => String","external_name":"cookies","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""},{"name":"max_redirects","doc":null,"default_value":"10","external_name":"max_redirects","restriction":""}],"args_string":"(method : Symbol, url : String, *, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, cookies = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, max_redirects = <span class=\"n\">10</span>, **options, &block)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L82","def":{"name":"new","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Symbol"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"cookies","doc":null,"default_value":"{} of String => String","external_name":"cookies","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""},{"name":"max_redirects","doc":null,"default_value":"10","external_name":"max_redirects","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":2,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(method, url, **options, headers: headers, cookies: cookies, form: form, params: params, max_redirects: max_redirects) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(method:Symbol,url:String,**args)-class-method","html_id":"new(method:Symbol,url:String,**args)-class-method","name":"new","doc":"When block is not given.","summary":"<p>When block is not given.</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Symbol"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(method : Symbol, url : String, **args)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L131","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L131","def":{"name":"new","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Symbol"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(method, url, **args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cookies:HTTP::Cookies-instance-method","html_id":"cookies:HTTP::Cookies-instance-method","name":"cookies","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Cookies","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"cookies","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cookies"}},{"id":"execute:Crest::Response-instance-method","html_id":"execute:Crest::Response-instance-method","name":"execute","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L165","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L165","def":{"name":"execute","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"@http_client.set_proxy(@proxy)\nif @logging\n  @logger.request(self)\nend\n@http_request = new_http_request(@method, @url, @headers, @form_data)\nresponse = @http_client.exec(@http_request)\nprocess_result(response)\n"}},{"id":"form_data:String?-instance-method","html_id":"form_data:String?-instance-method","name":"form_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"form_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@form_data"}},{"id":"handle_errors:Bool-instance-method","html_id":"handle_errors:Bool-instance-method","name":"handle_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"handle_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@handle_errors"}},{"id":"headers:HTTP::Headers-instance-method","html_id":"headers:HTTP::Headers-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Headers","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers"}},{"id":"host(*args,**options,&block)-instance-method","html_id":"host(*args,**options,&amp;block)-instance-method","name":"host","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","def":{"name":"host","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.host(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"host(*args,**options)-instance-method","html_id":"host(*args,**options)-instance-method","name":"host","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","def":{"name":"host","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.host(*args, **options)"}},{"id":"http_client:HTTP::Client-instance-method","html_id":"http_client:HTTP::Client-instance-method","name":"http_client","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Client","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"http_client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client"}},{"id":"http_request:HTTP::Request-instance-method","html_id":"http_request:HTTP::Request-instance-method","name":"http_request","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Request","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"http_request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_request"}},{"id":"logger:Crest::Logger-instance-method","html_id":"logger:Crest::Logger-instance-method","name":"logger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Logger","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger"}},{"id":"logging:Bool-instance-method","html_id":"logging:Bool-instance-method","name":"logging","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"logging","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logging"}},{"id":"max_redirects:Int32-instance-method","html_id":"max_redirects:Int32-instance-method","name":"max_redirects","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"max_redirects","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_redirects"}},{"id":"method:String-instance-method","html_id":"method:String-instance-method","name":"method","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@method"}},{"id":"p_addr:String?-instance-method","html_id":"p_addr:String?-instance-method","name":"p_addr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"p_addr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_addr"}},{"id":"p_pass:String?-instance-method","html_id":"p_pass:String?-instance-method","name":"p_pass","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"p_pass","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_pass"}},{"id":"p_port:Int32?-instance-method","html_id":"p_port:Int32?-instance-method","name":"p_port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"p_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_port"}},{"id":"p_user:String?-instance-method","html_id":"p_user:String?-instance-method","name":"p_user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"p_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_user"}},{"id":"password:String?-instance-method","html_id":"password:String?-instance-method","name":"password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password"}},{"id":"password=(password)-instance-method","html_id":"password=(password)-instance-method","name":"password=","doc":null,"summary":null,"abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":""}],"args_string":"(password)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","def":{"name":"password=","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password = password"}},{"id":"port(*args,**options)-instance-method","html_id":"port(*args,**options)-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","def":{"name":"port","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.port(*args, **options)"}},{"id":"port(*args,**options,&block)-instance-method","html_id":"port(*args,**options,&amp;block)-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","def":{"name":"port","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.port(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"proxy:HTTP::Proxy::Client?-instance-method","html_id":"proxy:HTTP::Proxy::Client?-instance-method","name":"proxy","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Proxy::Client?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"proxy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy"}},{"id":"redirection_history:Array(Crest::Response)-instance-method","html_id":"redirection_history:Array(Crest::Response)-instance-method","name":"redirection_history","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Crest::Response)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","def":{"name":"redirection_history","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@redirection_history"}},{"id":"redirection_history=(redirection_history)-instance-method","html_id":"redirection_history=(redirection_history)-instance-method","name":"redirection_history=","doc":null,"summary":null,"abstract":false,"args":[{"name":"redirection_history","doc":null,"default_value":"","external_name":"redirection_history","restriction":""}],"args_string":"(redirection_history)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","def":{"name":"redirection_history=","args":[{"name":"redirection_history","doc":null,"default_value":"","external_name":"redirection_history","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@redirection_history = redirection_history"}},{"id":"tls?(*args,**options)-instance-method","html_id":"tls?(*args,**options)-instance-method","name":"tls?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","def":{"name":"tls?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.tls?(*args, **options)"}},{"id":"tls?(*args,**options,&block)-instance-method","html_id":"tls?(*args,**options,&amp;block)-instance-method","name":"tls?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L75","def":{"name":"tls?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.tls?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"to_curl-instance-method","html_id":"to_curl-instance-method","name":"to_curl","doc":"Convert `Request` object to cURL command","summary":"<p>Convert <code><a href=\"../Crest/Request.html\">Request</a></code> object to cURL command</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L177","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L177","def":{"name":"to_curl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Crest::Curlify.to_curl(self)"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L69","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"user:String?-instance-method","html_id":"user:String?-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(user)-instance-method","html_id":"user=(user)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"args_string":"(user)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/request.cr#L73","def":{"name":"user=","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = user"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/RequestFailed","path":"Crest/RequestFailed.html","kind":"class","full_name":"Crest::RequestFailed","name":"RequestFailed","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/exceptions.cr","line_number":94,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"This is the base `Crest` exception class. Rescue it if you want to\ncatch any exception that your request might raise\nYou can see anything about the response via `e.response`.\nFor example, the entire result body (which is\nprobably an HTML error page) is `e.response.body`.\n\nHash of HTTP status `code => message`.\n\n* **1xx**: Informational - Request received, continuing process\n* **2xx**: Success - The action was successfully received, understood, and\n   accepted\n* **3xx**: Redirection - Further action must be taken in order to complete the\n   request\n* **4xx**: Client Error - The request contains bad syntax or cannot be fulfilled\n* **5xx**: Server Error - The server failed to fulfill an apparently valid\n   request\n\nSee [HTTP Status Code Registry](http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)\nfor more Information.","summary":"<p>This is the base <code><a href=\"../Crest.html\">Crest</a></code> exception class.</p>","class_methods":[{"id":"subclass_by_status_code(status_code)-class-method","html_id":"subclass_by_status_code(status_code)-class-method","name":"subclass_by_status_code","doc":null,"summary":null,"abstract":false,"args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":""}],"args_string":"(status_code)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr#L99","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr#L99","def":{"name":"subclass_by_status_code","args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"EXCEPTIONS_MAP.fetch(status_code, self)"}}],"constructors":[{"id":"new(response)-class-method","html_id":"new(response)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"args_string":"(response)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr#L103","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr#L103","def":{"name":"new","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"http_code-instance-method","html_id":"http_code-instance-method","name":"http_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr#L107","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr#L107","def":{"name":"http_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@response.status_code.to_i"}},{"id":"message-instance-method","html_id":"message-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr#L111","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr#L111","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"HTTP status code #{http_code}: #{STATUSES[http_code]}\""}},{"id":"response:Crest::Response-instance-method","html_id":"response:Crest::Response-instance-method","name":"response","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr#L95","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/exceptions.cr#L95","def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@response"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Resource","path":"Crest/Resource.html","kind":"class","full_name":"Crest::Resource","name":"Resource","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/resource.cr","line_number":50,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"A class that can be instantiated for access to a RESTful resource,\nincluding authentication, proxy and logging.\n\nSimple example:\n\n```crystal\nresource = Crest::Resource.new(\"https://httpbin.org/get\")\nresponse = resource.get\n```\n\nBlock style:\n\n```crystal\nresource = Crest::Resource.new(\"http://httpbin.org\") do |resource|\n  resource.headers.merge!({\"foo\" => \"bar\"})\nend\n\nresponse = resource[\"/headers\"].get\n```\n\nWith HTTP basic authentication:\n\n```crystal\nresource = Crest::Resource.new(\"https://httpbin.org/get\", user: \"user\", password: \"password\")\n```\n\nUse the `[]` syntax to allocate subresources:\n\n```crystal\nresource = Crest::Resource.new(\"https://httpbin.org\")\nresource[\"/get\"].get\n```\n\nYou can pass advanced parameters like default `params` or `headers`:\n\n```crystal\nresource = Crest::Resource.new(\n  \"https://httpbin.org\",\n  params: {\"key\" => \"key\"},\n  headers: {\"Content-Type\" => \"application/json\"}\n)\nresponse = response[\"/post\"].post(\n  form: {:height => 100, \"width\" => \"100\"},\n  params: {:secret => \"secret\"}\n)\n```","summary":"<p>A class that can be instantiated for access to a RESTful resource, including authentication, proxy and logging.</p>","class_methods":[],"constructors":[{"id":"new(url:String,*,headers={}ofString=>String,params:Params={}ofString=>String,**options,&block)-class-method","html_id":"new(url:String,*,headers={}ofString=&gt;String,params:Params={}ofString=&gt;String,**options,&amp;block)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":"Params"}],"args_string":"(url : String, *, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params : Params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, **options, &block)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L54","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L54","def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":"Params"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url, **options, headers: headers, params: params) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(url:String,**args)-class-method","html_id":"new(url:String,**args)-class-method","name":"new","doc":"When block is not given.","summary":"<p>When block is not given.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L78","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L78","def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url, **args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](suburl)-instance-method","html_id":"[](suburl)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":""}],"args_string":"(suburl)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L101","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L101","def":{"name":"[]","args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = concat_urls(@base_url, suburl)\nself\n"}},{"id":"delete(form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"delete(form={}ofString=&gt;String,headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"delete","args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:delete, form)\n"}},{"id":"delete(suburl:String,**options)-instance-method","html_id":"delete(suburl:String,**options)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"args_string":"(suburl : String, **options)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"delete","args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = concat_urls(@base_url, suburl)\ndelete(**options)\n"}},{"id":"get(form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"get(form={}ofString=&gt;String,headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"get","args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:get, form)\n"}},{"id":"get(suburl:String,**options)-instance-method","html_id":"get(suburl:String,**options)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"args_string":"(suburl : String, **options)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"get","args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = concat_urls(@base_url, suburl)\nget(**options)\n"}},{"id":"handle_errors:Bool-instance-method","html_id":"handle_errors:Bool-instance-method","name":"handle_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"handle_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@handle_errors"}},{"id":"headers:Hash(String,String)-instance-method","html_id":"headers:Hash(String,String)-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers"}},{"id":"http_client:HTTP::Client-instance-method","html_id":"http_client:HTTP::Client-instance-method","name":"http_client","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Client","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"http_client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client"}},{"id":"logger:Crest::Logger-instance-method","html_id":"logger:Crest::Logger-instance-method","name":"logger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Logger","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger"}},{"id":"logging:Bool-instance-method","html_id":"logging:Bool-instance-method","name":"logging","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"logging","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logging"}},{"id":"options(form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"options(form={}ofString=&gt;String,headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"options","doc":null,"summary":null,"abstract":false,"args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"options","args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:options, form)\n"}},{"id":"options(suburl:String,**options)-instance-method","html_id":"options(suburl:String,**options)-instance-method","name":"options","doc":null,"summary":null,"abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"args_string":"(suburl : String, **options)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"options","args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = concat_urls(@base_url, suburl)\noptions(**options)\n"}},{"id":"p_addr:String?-instance-method","html_id":"p_addr:String?-instance-method","name":"p_addr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"p_addr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_addr"}},{"id":"p_pass:String?-instance-method","html_id":"p_pass:String?-instance-method","name":"p_pass","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"p_pass","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_pass"}},{"id":"p_port:Int32?-instance-method","html_id":"p_port:Int32?-instance-method","name":"p_port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"p_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_port"}},{"id":"p_user:String?-instance-method","html_id":"p_user:String?-instance-method","name":"p_user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"p_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_user"}},{"id":"params:Hash(String|Symbol,Int32|String)|Hash(String,Int32|String)|Hash(String,Int32)|Hash(String,String)|Hash(Symbol,Int32|String)|Hash(Symbol,Int32)|Hash(Symbol,String)-instance-method","html_id":"params:Hash(String|Symbol,Int32|String)|Hash(String,Int32|String)|Hash(String,Int32)|Hash(String,String)|Hash(Symbol,Int32|String)|Hash(Symbol,Int32)|Hash(Symbol,String)-instance-method","name":"params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String | Symbol, Int32 | String) | Hash(String, Int32 | String) | Hash(String, Int32) | Hash(String, String) | Hash(Symbol, Int32 | String) | Hash(Symbol, Int32) | Hash(Symbol, String)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params"}},{"id":"password:String?-instance-method","html_id":"password:String?-instance-method","name":"password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password"}},{"id":"patch(suburl:String,**options)-instance-method","html_id":"patch(suburl:String,**options)-instance-method","name":"patch","doc":null,"summary":null,"abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"args_string":"(suburl : String, **options)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"patch","args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = concat_urls(@base_url, suburl)\npatch(**options)\n"}},{"id":"patch(form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"patch(form={}ofString=&gt;String,headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"patch","doc":null,"summary":null,"abstract":false,"args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"patch","args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:patch, form)\n"}},{"id":"post(suburl:String,**options)-instance-method","html_id":"post(suburl:String,**options)-instance-method","name":"post","doc":null,"summary":null,"abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"args_string":"(suburl : String, **options)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"post","args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = concat_urls(@base_url, suburl)\npost(**options)\n"}},{"id":"post(form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"post(form={}ofString=&gt;String,headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"post","doc":null,"summary":null,"abstract":false,"args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"post","args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:post, form)\n"}},{"id":"put(suburl:String,**options)-instance-method","html_id":"put(suburl:String,**options)-instance-method","name":"put","doc":null,"summary":null,"abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"args_string":"(suburl : String, **options)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"put","args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = concat_urls(@base_url, suburl)\nput(**options)\n"}},{"id":"put(form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"put(form={}ofString=&gt;String,headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"put","doc":null,"summary":null,"abstract":false,"args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L82","def":{"name":"put","args":[{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:put, form)\n"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"user:String?-instance-method","html_id":"user:String?-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/resource.cr#L51","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Response","path":"Crest/Response.html","kind":"class","full_name":"Crest::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/response.cr","line_number":14,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"Response objects have several useful methods:\n\n* `body`: The response body as a string\n* `status_code`: The HTTP response code\n* `headers`: A hash of HTTP response headers\n* `cookies`: A hash of HTTP cookies set by the server\n* `request`: The `Crest::Request` object used to make the request\n* `http_client_res`: The `HTTP::Client::Response` object\n* `history`: A list of each response received in a redirection chain","summary":"<p>Response objects have several useful methods:</p>","class_methods":[{"id":"create(http_client_res:HTTP::Client::Response,request:Crest::Request)-class-method","html_id":"create(http_client_res:HTTP::Client::Response,request:Crest::Request)-class-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[{"name":"http_client_res","doc":null,"default_value":"","external_name":"http_client_res","restriction":"HTTP::Client::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(http_client_res : HTTP::Client::Response, request : Crest::Request)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L17","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L17","def":{"name":"create","args":[{"name":"http_client_res","doc":null,"default_value":"","external_name":"http_client_res","restriction":"HTTP::Client::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(http_client_res, request)"}}],"constructors":[{"id":"new(http_client_res:HTTP::Client::Response,request:Crest::Request)-class-method","html_id":"new(http_client_res:HTTP::Client::Response,request:Crest::Request)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"http_client_res","doc":null,"default_value":"","external_name":"http_client_res","restriction":"HTTP::Client::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(http_client_res : HTTP::Client::Response, request : Crest::Request)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L21","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L21","def":{"name":"new","args":[{"name":"http_client_res","doc":null,"default_value":"","external_name":"http_client_res","restriction":"HTTP::Client::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(http_client_res, request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"body-instance-method","html_id":"body-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L84","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L84","def":{"name":"body","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client_res.body"}},{"id":"cookies-instance-method","html_id":"cookies-instance-method","name":"cookies","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L94","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L94","def":{"name":"cookies","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request_cookies.merge(response_cookies)"}},{"id":"follow_redirection-instance-method","html_id":"follow_redirection-instance-method","name":"follow_redirection","doc":"Follow a redirection response by making a new HTTP request to the\nredirection target.","summary":"<p>Follow a redirection response by making a new HTTP request to the redirection target.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L39","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L39","def":{"name":"follow_redirection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"url = extract_url_from_headers\nnew_request = prepare_new_request(url)\nnew_request.redirection_history = history + [self]\nnew_request.execute\n"}},{"id":"headers-instance-method","html_id":"headers-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L88","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L88","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request.headers.merge!(http_client_res.headers)\nnormalize_headers(@request.headers)\n"}},{"id":"history:Array-instance-method","html_id":"history:Array-instance-method","name":"history","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L98","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L98","def":{"name":"history","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":"@request.redirection_history"}},{"id":"http_client_res:HTTP::Client::Response-instance-method","html_id":"http_client_res:HTTP::Client::Response-instance-method","name":"http_client_res","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Client::Response","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L15","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L15","def":{"name":"http_client_res","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client_res"}},{"id":"request:Crest::Request-instance-method","html_id":"request:Crest::Request-instance-method","name":"request","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Request","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L15","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L15","def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request"}},{"id":"return!-instance-method","html_id":"return!-instance-method","name":"return!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L24","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L24","def":{"name":"return!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case status_code\nwhen 200..207\n  self\nwhen 301, 302, 303, 307\n  check_max_redirects\n  follow_redirection\nelse\n  if request.handle_errors\n    raise_exception!\n  end\n  self\nend"}},{"id":"status_code:Int32-instance-method","html_id":"status_code:Int32-instance-method","name":"status_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L80","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L80","def":{"name":"status_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@http_client_res.status_code.to_i"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L76","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/response.cr#L76","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@request.url"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/TextValue","path":"Crest/TextValue.html","kind":"alias","full_name":"Crest::TextValue","name":"TextValue","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crest.cr","line_number":33,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":true,"aliased":"(Int32 | String | Symbol | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/UrlencodedForm","path":"Crest/UrlencodedForm.html","kind":"class","full_name":"Crest::UrlencodedForm(T)","name":"UrlencodedForm","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Crest/Form","kind":"class","full_name":"Crest::Form","name":"Form"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Crest/Form","kind":"class","full_name":"Crest::Form","name":"Form"},{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/forms/urlencoded_form.cr","line_number":8,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/urlencoded_form.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"This class lets `crest` emulate a filled-in form\nin which a user has pressed the submit button.\nThis causes `crest` to POST data using the\n\"Content-Type\" `application/x-www-form-urlencoded`.","summary":"<p>This class lets <code>crest</code> emulate a filled-in form in which a user has pressed the submit button.</p>","class_methods":[],"constructors":[{"id":"new(params:T)-class-method","html_id":"new(params:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"args_string":"(params : T)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L12","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/form.cr#L12","def":{"name":"new","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UrlencodedForm(T).allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"generate-instance-method","html_id":"generate-instance-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/urlencoded_form.cr#L11","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/urlencoded_form.cr#L11","def":{"name":"generate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@form_data = parsed_params\nself\n"}},{"id":"parsed_params-instance-method","html_id":"parsed_params-instance-method","name":"parsed_params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/urlencoded_form.cr#L17","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/forms/urlencoded_form.cr#L17","def":{"name":"parsed_params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Crest::Utils.encode_query_string(@params)"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Utils","path":"Crest/Utils.html","kind":"module","full_name":"Crest::Utils","name":"Utils","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crest/utils.cr","line_number":3,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/utils.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/mamantoha/crest/Crest/Utils","kind":"module","full_name":"Crest::Utils","name":"Utils"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"Various utility methods","summary":"<p>Various utility methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"encode_query_string(object:Hash)-instance-method","html_id":"encode_query_string(object:Hash)-instance-method","name":"encode_query_string","doc":"Serialize hash object into HTTP query string parameters\n\n```crystal\nencode_query_string({:foo => \"123\", :bar => 456})\n# => \"foo=123&bar=456\"\n```","summary":"<p>Serialize hash object into HTTP query string parameters</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Hash"}],"args_string":"(object : Hash)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/utils.cr#L12","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/utils.cr#L12","def":{"name":"encode_query_string","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HTTP::Params.build do |form|\n  (flatten_params(object)).each do |name, value|\n    form.add(name.to_s, value.to_s)\n  end\nend"}},{"id":"flatten_params(object:Hash,parent_key=nil)-instance-method","html_id":"flatten_params(object:Hash,parent_key=nil)-instance-method","name":"flatten_params","doc":"Transform deeply nested param containers into a flat hash of `key => value`.\n\n```crystal\nCrest::Utils.flatten_params({:key1 => {:key2 => \"123\"}})\n# => [{\"key1[key2]\", \"123\"}]\n```","summary":"<p>Transform deeply nested param containers into a flat hash of <code>key => value</code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Hash"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"args_string":"(object : Hash, parent_key = <span class=\"n\">nil</span>)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/utils.cr#L26","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/utils.cr#L26","def":{"name":"flatten_params","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Hash"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"object.reduce([] of Tuple(String, TextValue | File)) do |memo, item|\n  k, v = item\n  processed_key = parent_key ? \"#{parent_key}[#{k}]\" : k.to_s\n  case v\n  when Hash, Array\n    memo = memo + (flatten_params(v, processed_key))\n  else\n    memo << {processed_key, v}\n  end\n  memo\nend"}},{"id":"flatten_params(object:Array,parent_key=nil)-instance-method","html_id":"flatten_params(object:Array,parent_key=nil)-instance-method","name":"flatten_params","doc":"Transform deeply nested param containers into a flat hash of `key => value`.\n\n```crystal\nCrest::Utils.flatten_params({:key1 => {:arr => [\"1\", \"2\", \"3\"]}})\n# => [{\"key1[arr][]\", \"1\"}, {\"key1[arr][]\", \"2\"}, {\"key1[arr][]\", \"3\"}]\n```","summary":"<p>Transform deeply nested param containers into a flat hash of <code>key => value</code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Array"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"args_string":"(object : Array, parent_key = <span class=\"n\">nil</span>)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/utils.cr#L49","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/crest/utils.cr#L49","def":{"name":"flatten_params","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Array"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"object.reduce([] of Tuple(String, TextValue | File)) do |memo, item|\n  k = :\n  v = item\n  processed_key = parent_key ? \"#{parent_key}[#{k}]\" : k.to_s\n  memo << {processed_key, v}\n  memo\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/mamantoha/crest/HTTP","path":"HTTP.html","kind":"module","full_name":"HTTP","name":"HTTP","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"http/proxy/client.cr","line_number":9,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/http/proxy/client.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The HTTP module contains `HTTP::Client`, `HTTP::Server` and `HTTP::WebSocket` implementations.","summary":"<p>The HTTP module contains <code><a href=\"HTTP/Client.html\">HTTP::Client</a></code>, <code>HTTP::Server</code> and <code>HTTP::WebSocket</code> implementations.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/mamantoha/crest/HTTP/Client","path":"HTTP/Client.html","kind":"class","full_name":"HTTP::Client","name":"Client","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"http/proxy/client.cr","line_number":104,"url":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/http/proxy/client.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/HTTP","kind":"module","full_name":"HTTP","name":"HTTP"},"doc":"An HTTP Client.\n\n### One-shot usage\n\nWithout a block, an `HTTP::Client::Response` is returned and the response's body\nis available as a `String` by invoking `HTTP::Client::Response#body`.\n\n```\nrequire \"http/client\"\n\nresponse = HTTP::Client.get \"http://www.example.com\"\nresponse.status_code      # => 200\nresponse.body.lines.first # => \"<!doctype html>\"\n```\n\n### Streaming\n\nWith a block, an `HTTP::Client::Response` body is returned and the response's body\nis available as an `IO` by invoking `HTTP::Client::Response#body_io`.\n\n```\nrequire \"http/client\"\n\nHTTP::Client.get(\"http://www.example.com\") do |response|\n  response.status_code  # => 200\n  response.body_io.gets # => \"<!doctype html>\"\nend\n```\n\n### Reusing a connection\n\nSimilar to the above cases, but creating an instance of an `HTTP::Client`.\n\n```\nrequire \"http/client\"\n\nclient = HTTP::Client.new \"www.example.com\"\nresponse = client.get \"/\"\nresponse.status_code      # => 200\nresponse.body.lines.first # => \"<!doctype html>\"\nclient.close\n```\n\n### Compression\n\nIf `compress` isn't set to `false`, and no `Accept-Encoding` header is explicitly specified,\nan HTTP::Client will add an `\"Accept-Encoding\": \"gzip, deflate\"` header, and automatically decompress\nthe response body/body_io.\n\n### Encoding\n\nIf a response has a `Content-Type` header with a charset, that charset is set as the encoding\nof the returned IO (or used for creating a String for the body). Invalid bytes in the given encoding\nare silently ignored when reading text content.","summary":"<p>An HTTP Client.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"proxy_connection_options-instance-method","html_id":"proxy_connection_options-instance-method","name":"proxy_connection_options","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/http/proxy/client.cr#L121","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/http/proxy/client.cr#L121","def":{"name":"proxy_connection_options","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"opts = {} of Symbol => Float64 | Nil\nopts[:dns_timeout] = @dns_timeout\nopts[:connect_timeout] = @connect_timeout\nopts[:read_timeout] = @read_timeout\nreturn opts\n"}},{"id":"set_proxy(proxy:HTTP::Proxy::Client?)-instance-method","html_id":"set_proxy(proxy:HTTP::Proxy::Client?)-instance-method","name":"set_proxy","doc":null,"summary":null,"abstract":false,"args":[{"name":"proxy","doc":null,"default_value":"","external_name":"proxy","restriction":"HTTP::Proxy::Client | ::Nil"}],"args_string":"(proxy : HTTP::Proxy::Client?)","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/http/proxy/client.cr#L105","source_link":"https://github.com/mamantoha/crest/blob/1ca36e2a3243ff5c7bef4ed325b73cd9b0259b12/src/http/proxy/client.cr#L105","def":{"name":"set_proxy","args":[{"name":"proxy","doc":null,"default_value":"","external_name":"proxy","restriction":"HTTP::Proxy::Client | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if proxy\nelse\n  return\nend\nbegin\n  @socket = proxy.open(host: @host, port: @port, tls: @tls, connection_options: proxy_connection_options)\n  if proxy.username\n    proxy_basic_auth(proxy.username, proxy.password)\n  end\nrescue IO::Error\n  @socket = nil\nend\n@socket\n"}}],"macros":[],"types":[]}]}]}}